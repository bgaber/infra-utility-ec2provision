---

- name: Create Instance
  hosts: localhost
  gather_facts: false
  connection: local

  tasks:
    - import_tasks: shared.yml
      when: (buildenv == "shared")

    - import_tasks: dev.yml
      when: (buildenv == "dev")

    - import_tasks: test.yml
      when: (buildenv == "test")

    - import_tasks: testfr.yml
      when: (buildenv == "test-fr")

    - import_tasks: prod.yml
      when: (buildenv == "prod")

    - import_tasks: caprod.yml
      when: (buildenv == "ca-prod")

    - import_tasks: ossettings.yml

    - name: Assume Credentials
      sts_assume_role:
        region: "{{ target_region }}"
        role_arn: "{{ awsarnrole }}"
        role_session_name: "AWXBuildServer"
      register: assumed_role

    - name: Print ansible version
      debug:
        msg: "Ansible version is  {{ ansible_version.full }}"

    # - name: Assume Role Data
    #   debug:
    #     var: assumed_role

    # Outputs "ansible_date_time.date": "VARIABLE IS NOT DEFINED!"
    # - name: Display the current timestamp in YYYY-MM-DD
    #   debug:
    #     var=ansible_date_time.date

    # Outputs "ansible_facts['date_time']['date']": "VARIABLE IS NOT DEFINED!"
    # - name: Display the current timestamp in YYYY-MM-DD
    #   debug:
    #     var=ansible_facts['date_time']['date']

    # - name: Display the current timestamp in YYYY-MM-DD
    #   debug: msg="{{ lookup('pipe','date +%Y-%m-%d') }}"

    - name: Find AMI Target
      ec2_ami_info:
        filters:
          name: "cmpc*{{ osselection }}*base*"
        owners: 123456789012
        #owners: self
        region: "{{ target_region }}"
        aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
        aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
        security_token: "{{ assumed_role.sts_creds.session_token }}"
      register: found_base_ami

    - import_tasks: osbuildlinux.yml
      when: (osselection == "centos7") or (osselection == "centos8") or (osselection == "rhel7") or (osselection == "rhel8")

    - import_tasks: osbuildwin.yml
      when: (ipspecified == "no") and ((osselection == "win2019") or (osselection == "win2022"))

    - import_tasks: osbuildwinwithip.yml
      when: (ipspecified == "yes") and ((osselection == "win2019") or (osselection == "win2022"))

- name: Configure New Linux Instance
  hosts: new_launch_linux
  gather_facts: true
  # vars:
  #   assumed_role: "{{ hostvars[instance_name]['shared_variable'] }}"

  roles:
    - systemupdates
    - generalostasks
    - networkconfig
    - appgroup

  # environment:
  #   AWS_ACCESS_KEY: "{{ assumed_role.sts_creds.access_key }}"
  #   AWS_SECRET_ACCESS_KEY: "{{ assumed_role.sts_creds.secret_key }}"
  #   AWS_SECURITY_TOKEN: "{{ assumed_role.sts_creds.session_token }}"

- name: Configure New Windows Instance
  hosts: new_launch_windows
  gather_facts: true

  roles:
    - systemupdates
    - generalostasks
    - networkconfig
    - winadjoin
    - appgroup
    